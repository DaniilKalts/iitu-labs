Project UniversityDatabase {
  database_type: 'PostgreSQL'
  Note: 'This project represents a university database schema with multiple tables and relationships.'
}

Table faculties {
  faculty_id integer [primary key, increment]
  name varchar(100) [not null, note: 'Faculty name, 5-100 characters']
  description varchar(500) [note: 'Faculty description, 20-500 characters']
}

Table deans {
  dean_id integer [primary key, increment]
  faculty_id integer [ref: > faculties.faculty_id]
  personal_info_id integer [ref: > personal_info.personal_info_id]
}

Table departments {
  department_id integer [primary key, increment]
  faculty_id integer [ref: > faculties.faculty_id]
  name varchar(100) [not null, note: 'Department name, 5-100 characters']
  description varchar(500) [note: 'Department description, 20-500 characters']
}

Table programs {
  program_id integer [primary key, increment]
  department_id integer [ref: > departments.department_id]
  name varchar(100) [not null, note: 'Program name, 5-100 characters']
  description varchar(500) [note: 'Program description, 20-500 characters']
}

Table program_subject {
  program_id integer [ref: > programs.program_id]
  subject_id integer [ref: > subjects.subject_id]
  Note: 'Associative table for many-to-many relation between programs and subjects'
  indexes {
    (program_id, subject_id) [pk]
  }
}

Table subjects {
  subject_id integer [primary key, increment]
  name varchar(50) [not null, note: 'Subject name, 5-50 characters']
  description varchar(250) [note: 'Subject description, 20-250 characters']
  credits integer [default: 1, note: 'Credits (1-10)']
}

Table contact_info {
  contact_info_id integer [primary key, increment]
  email varchar(100) [not null, note: 'Valid email format']
  phone_number varchar(15) [note: 'Phone number in Kazakhstan format, +7 followed by 10 digits']
  address varchar(100) [note: 'Address, 10-100 characters']
}

Table personal_info {
  personal_info_id integer [primary key, increment]
  first_name varchar(100) [not null, note: 'First name, 2-100 characters']
  last_name varchar(100) [not null, note: 'Last name, 2-100 characters']
  patronymic varchar(100) [note: 'Patronymic name, 2-100 characters']
  gender varchar(10) [note: 'Gender, can be MALE, FEMALE, or OTHER']
  birth_date date [note: 'Valid date; age must be between 17 and 70']
  iin varchar(12) [note: 'Unique identification number, exactly 12 digits']
  education varchar(200) [note: 'Education details, 20-200 characters']
  contact_info_id integer [ref: > contact_info.contact_info_id]
}

Table students {
  student_id integer [primary key, increment]
  group_id integer [ref: > groups.group_id]
  personal_info_id integer [ref: > personal_info.personal_info_id]
}

Table teachers {
  teacher_id integer [primary key, increment]
  personal_info_id integer [ref: > personal_info.personal_info_id]
}

Table teacher_subject {
  teacher_id integer [ref: > teachers.teacher_id]
  subject_id integer [ref: > subjects.subject_id]
  Note: 'Associative table for many-to-many relation between teachers and subjects'
  indexes {
    (teacher_id, subject_id) [pk]
  }
}

Table groups {
  group_id integer [primary key, increment]
  head_student_id integer [ref: > students.student_id]
  name varchar(20) [not null, note: 'Group name, 6-20 characters']
}

Table buildings {
  building_id integer [primary key, increment]
  name varchar(100) [not null, note: 'Building name, 5-100 characters']
  description varchar(500) [note: 'Building description, 20-500 characters']
  address varchar(100) [note: 'Building address, 10-100 characters']
  floor_count integer [default: 1, note: 'Floor count, must be between 1 and 50']
}

Table classrooms {
  classroom_id integer [primary key, increment]
  building_id integer [ref: > buildings.building_id]
  name varchar(100) [not null, note: 'Classroom name, 5-100 characters']
  description varchar(200) [note: 'Classroom description, 20-200 characters']
  floor_number integer [note: 'Floor number, must be between 1 and buildingâ€™s total floors']
  capacity integer [default: 5, note: 'Capacity, must be between 5 and 100']
}

Table schedules {
  schedule_id integer [primary key, increment]
  group_id integer [ref: > groups.group_id]
  subject_id integer [ref: > subjects.subject_id]
  teacher_id integer [ref: > teachers.teacher_id]
  classroom_id integer [ref: > classrooms.classroom_id]
  weekday varchar(10) [note: 'Weekday (Monday to Sunday)']
  start_time time [note: 'Start time (24-hour format)']
  end_time time [note: 'End time, must be after start_time']
}

Table assignments {
  assignment_id integer [primary key, increment]
  subject_id integer [ref: > subjects.subject_id]
  name varchar(40) [not null, note: 'Assignment name, 5-40 characters']
  description varchar(100) [note: 'Assignment description, 15-100 characters']
  deadline date [note: 'Assignment deadline date']
}

Table schedule_assignments {
  schedule_id integer [ref: > schedules.schedule_id]
  assignment_id integer [ref: > assignments.assignment_id]
  indexes {
    (schedule_id, assignment_id) [pk]
  }
}

Table student_assignment {
  student_id integer [ref: > students.student_id]
  assignment_id integer [ref: > assignments.assignment_id]
  score integer [default: 0, note: 'Score between 0 and 100']
  indexes {
    (student_id, assignment_id) [pk]
  }
}

Table clubs {
  club_id integer [primary key, increment]
  name varchar(100) [not null, note: 'Club name, 5-100 characters']
  description varchar(500) [note: 'Club description, 20-500 characters']
}

Table student_club {
  student_id integer [ref: > students.student_id]
  club_id integer [ref: > clubs.club_id]
  indexes {
    (student_id, club_id) [pk]
  }
}

Table rector {
  rector_id integer [primary key, increment]
  personal_info_id integer [ref: > personal_info.personal_info_id]
}

VISIT THIS LINK TO VIEW THE ER-DIAGRAM ON THE WEBSITE:
https://dbdiagram.io/d/66ef8697a0828f8aa69f7b4b
